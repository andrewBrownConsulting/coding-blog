{"ast":null,"code":"var _jsxFileName = \"/Users/andrewbrown/Desktop/webapps/coding-blog/src/BlogPage.jsx\";\nimport data from './assets/blog-db.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogPage() {\n  let url = window.location.href;\n  const foundId = url.split('id=')[1];\n  const {\n    title,\n    article,\n    image,\n    date\n  } = data.blogEntries.find(entry => entry.id === foundId);\n  function wordCount(articleArray) {\n    let counter = 0;\n    articleArray.forEach(element => {\n      counter += element.split(' ').length;\n    });\n    return counter;\n  }\n  if (data) {\n    document.title = title ? title : 'test';\n    const wordCount = wordCount(article);\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \" fs-1\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Author - Andrew Brown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [wordCount, \" words\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid rounded\",\n            src: image,\n            alt: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), article === null || article === void 0 ? void 0 : article.map((sect, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: sect\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 32\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","BlogPage","url","window","location","href","foundId","split","title","article","image","date","blogEntries","find","entry","id","wordCount","articleArray","counter","forEach","element","length","document","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","sect","index","_c","$RefreshReg$"],"sources":["/Users/andrewbrown/Desktop/webapps/coding-blog/src/BlogPage.jsx"],"sourcesContent":["import data from './assets/blog-db.json'\nexport default function BlogPage() {\n    let url = window.location.href;\n    const foundId = url.split('id=')[1];\n    const { title, article, image, date } = data.blogEntries.find((entry) => entry.id === foundId);\n    function wordCount(articleArray) {\n        let counter = 0;\n        articleArray.forEach(element => {\n            counter += element.split(' ').length;\n        });\n        return counter;\n    }\n    if (data) {\n        document.title = title ? title : 'test';\n        const wordCount = wordCount(article);\n        return (\n            <article className='container'>\n                <div className='row'>\n                    <div className='col-6 mb-2'>\n                        <h3 className=' fs-1'>{title}</h3>\n                        <p className='card-title'>{date}</p>\n                        <p>Author - Andrew Brown</p>\n                        <p>{wordCount} words</p>\n                    </div>\n                    <div className='col-6 mb-2'>\n                        < img className='img-fluid rounded' src={image} alt='Post' />\n                    </div>\n                </div>\n                <div className='row'>\n                    <br />\n                    {article?.map((sect, index) => {\n                        return <p key={index}>{sect}</p>\n                    })}\n                    <p></p>\n                </div>\n            </article >\n        )\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}