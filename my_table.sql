--
-- PostgreSQL database dump
--

\restrict UJjOhoTgwgcpbQo2bc4eU1bL89q9M3wZV9KpBmhtAWUfmy7U4hOWlhwwSixzymB

-- Dumped from database version 17.6 (Postgres.app)
-- Dumped by pg_dump version 17.6 (Postgres.app)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: blog_entries; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_entries (
    id character varying(36) NOT NULL,
    title character varying(255) NOT NULL,
    date_created date NOT NULL,
    image_url character varying(255),
    imagecaption character varying(255),
    article text[] NOT NULL
);


ALTER TABLE public.blog_entries OWNER TO postgres;

--
-- Data for Name: blog_entries; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_entries (id, title, date_created, image_url, imagecaption, article) FROM stdin;
documentation	Perfect Code Documentation	2025-08-25	https://i.imgur.com/vTcV33k.png	A metaphorical sketch of the search for great documentation.	{"## Introduction","Programmers are natural optimizers. We want to optimize everything and remove unnecessary steps of any repetitive process. A lot of codebases don't have documentation. The majority of documentation is bad. Most is worthless due to being uselessly out of date and/or hopelessly incomplete. Most of the time, it's more useful to read code than to read documentation. ","In this blog article, I'll aim to seek the formula for perfect code documentation. I will be specifically referring to internal developer documentation. This is (in my opinion) the most challenging documentation to write. The same practices can be applied elsewhere.","## Documentation Aims","So documentation is for explaining code... not very a very usable system. The question then becomes: 'how should the documentation explain code?'","We want to communicate complex ideas which can not easily be seen from within the lines of code. I would categorize these ideas into 3 distinct categories; Systems, Features and Rules. ","Systems are large parts of the codebase that use many features for a single purpose.","Features are bigger than a function but performs a single task.  ","Rules are rules. ","## System Documentation","Systems such as the 'frontend tech stack' or the 'deployment pipelines' will be largely unchanging from week to week. Systems require in-depth explanations including diagrams and design justifications.","High level documentation is mainly useful for new developers to get them up to speed with the main concepts of a codebase. With this as a structure, the features make more sense.","When a system is re-architected, the system documentation can be referenced. If a justification is no longer valid, it stands that a change should be made.","In terms of the ROI for documentation, this is probably the best onboarding investment a software team can make.  ","## Feature Documentation","Features such as 'Search Database' and 'Validate Form' are classified as such because they perform a single task. Though simple features need not be always be documented, a complex feature can be quickly explained to a developer in order to save them time reading through code. ","The main content of a feature document will be a brief explanation of the task, then an overview of how that task is achieved with reference to function names. ","Additionally, a good feature document can explain justification for its design decisions and how to extend the feature  where appropriate.","## Rules Documentation","Without rules, a codebase can become disjointed. Unlike a book, there are multiple authors and they all have their own ideas as to what is 'good'. It's more important to have rules than to what the rules actually are. Rules should be made about how to;","- style code","- split up git commits (e.g. commits should pass all tests) ","- format new documentation","- write new tickets","- write new tests.","Mostly, rules document non-functional requirements for code. If rules are followed, the codebase is clear, consistent and easily readable.","## A note on 'Self-Documenting' code","Clean code is great. We all love code that explains what it does. However, 'self-documenting' code is a bit of a misnomer. It isn't it's own documentation. It's more accurately self-commenting code. Well written code replaces the need for _most_ comments. I'll henceforth be referring to it as 'self-commenting' code. ","Admittedly, having 'clean code' is a much bigger optimization than documentation.","## The Perfect Documentation","The Perfect Documentation, in my estimation, is documentation which stands on it's own without code. You should be able to navigate and read the documentation before reading any code and understand what the software is doing. After reading it, you will then be well equipped to work with the code.","The perfect documentation does not need to be exhaustive but it should aim to be above all... useful.  Code is read more than it is written and documentation aims to reduce how much code we need to read.  So... to reduce code-reading is to save time. Documentation is not a waste of time... it's just a waste of time if it's useless."}
networking	Networking (is) for Dummies	2025-08-20	https://i.imgur.com/qubAYLT.png	The ill-fated salesman Harry Ellis from 'Die Hard'.	{"## Introduction","A lot of platitudes get said about _'networking'_. You hear quotes such as _'Your net worth is only as good as your network'_ - Rishi Chowdhury or, as I prefer, the somewhat nonsensical _'Your network IS your net worth'_ - Tai Lopez. ","Saying a lot without saying very much seems to be the dominant way to speak about networking. You can write your own paint-by-numbers networking article if you like! Just mention phrases like 'inner circle' and 'it's all about who you know'.","That said, I _can_ see the value of networking. Let's say you wanted to film a video but needed a camera operator and a second actor. Could you find the right people? Would you be able to do it next weekend? Would you be able to do it for _free_?","The promise of having strong interpersonal networks is that it allows us to accomplish more than we are able to individually.","## Why I dislike the word 'Networking'","The image that comes to mind when I think about networking is a salesman _schmoozing_ with the bosses trying to get first in line for a promotion.",image:https://i.imgur.com/U0Bs4Uv.jpeg,"After asking others, I found that a lot of people think this way. In fact, there is truly a stigma about actively networking. If you don't work in sales, the term just isn't a positive one.","That being said, as I've been looking for a job recently, it would be useful to know more people who can give me guidance on the best opportunities. I want a better network. That requires me to work out exactly how to network and the aforementioned articles have been less than helpful in that regard.","As a logical thinker, I would like something more concrete than 'go network' or 'use your friends'. My answer is to make a working model. Then, use this to network more effectively.","## The Prize for Networking","Though it may be obvious to most, it's useful to clarify what the point of networking is. According to real data, good professional networkers;","- are higher paid,","- find jobs that _aren't_ advertised,","- get more promotions,","- develop more skills by learning from others,","- and more easily get help when needed.","These are all good things. They also make logical sense; you can't get a job you don't know about and you can't learn skills from someone you don't know. Hence, if I can think of networking logically, I can construct a logical model. ",image:https://i.imgur.com/AFY12L7.jpeg,"A flow diagram makes sense here because I'm looking for steps to build a network. ","## What's the key to opening doors?","Meeting people is also obvious as the way to add to one's network. For completeness and according to real data, good networkers;","- have a goal in mind when speaking to people,","- tell people about their intentions,","- send casual LinkedIn messages frequently,","- attend in-person events routinely,","- follow up on leads,","- and provide value when asked.","Again, these items make logical sense. Meeting people is the only way to expand your network and that's what happens at events. Following up on _'leads'_ (another word I hate) will keep you in their mind. Being honest with people builds trust which cements a relationship. So... we can add these as inputs to our model.  ",image:https://i.imgur.com/RFdsd6u.jpeg,"We _could_ stop here and use this model but it lacks a bit of depth. Currently LinkedIn Messages lead to a network which leads to money. Not a great working model.","## Shallow and deep connections","A final piece I will add is that not all connections are the same. Some are people you met once and some are coworkers you see 5 days a week. As such, it would make sense to add this final piece to our model.","For simplicity, I'll divide these connections into the categories of 'shallow' and 'deep' (aka inner and outer circle). Looking at our desired outputs again, it's unlikely you'll get a job or help from someone you met once, but it's very likely from a close friend. As such, our outputs are really only related to our 'deep' connections. ","I've also added a filtering process for in our network we should focus on. We can't be friends with everyone and some people are simply more _'useful'_ than others. ",image:https://i.imgur.com/KA99B1j.jpeg,"Also, I found it useful to split the inputs into those which create shallow connections and those that transform shallow connections into deeper connections. We don't need to give a person life-changing advice to add them on our LinkedIn, for example.","## Conclusion","My model is complete. I've distilled a dozen articles on networking down to flow chart. I think it all makes logical sense and I'll be happy to test it out. The main assumption here is that once people get close to you, they want to help which is a pretty reasonable assumption.","The next stage in my networking journey is to actually go out and do the work. It's obviously more complex than a flow chart. On the other hand, sailing is more complicated than the map but you still want the map."}
learning-process-1	Improving my Learning Method (part 1)	2025-08-15	https://i.imgur.com/HaDU7ZK.png	How I feel when taking great notes	{"## Intro","The point of this blog is to examine what I do and how I can do it better. Currently I'm trying to learn front-end development and so I'm examining the learning process and seeing what I can improve.","Note: I'll use the word 'read' to describe intaking any kind of learning material (video, audio etc).","## Learning Techniques","In school and in life we sometimes come across learning techniques. Techniques include; speed reading, mnemonics, teaching, flash cards, mental models, mind maps, interleaved practice.  These techniques can be effective but sometimes it's hard to see why they work and when to use them.","I know people who swear by flash-cards but I've never seen the appeal.","## How I Learn","I take notes on Obsidian and Practice. It's quite effective. I think it's simple, fast and forces me to think about what I'm reading as I read it. I try to write things in my own words. My main focus is not on speed. My main focus is on thinking about the information I've just read.","I would say I retain about 80% of the information I've learned and with my notes I can look back and see what I've missed.","## Can I Make My Learning better?","I have avoided thinking about my learning processes for a while now. The reason... I am an optimisation junkie. I _love_ to optimise. I like the use the best tools I have in the most effective way. I can get sidetracked by the method and forget about the activity. I'll have to stop myself from thinking 'Is this really the _best_ way of learning this?' or 'are these notes _actually_ helping me learn'. ","Optimisation can get in the way. It has done in the past where I've wasted hours of time 'optimising' _how_ I do homework and end up spending twice as long (or rushing it).","That said, today I'm indulging these thoughts. For one reason, to clear them from my mind. For another, because I probably _should_ improve my learning process.","## So... What's the Point of Writing it Down?","Note taking is a bit strange. A naive man might say, in all sincerity: 'Why do I want to make a copy! I can just use the original!'.","Well... from a certain point of view, he wouldn't be wrong. In fact, ask the average person why they take notes and not have a good answer. Now I've justified the question, here's the answer.","We take notes for 2 main reasons:","Primary - We can learn better when we actively engage with the material.","Secondary - We have a record for future reference.","Briefly discussing point 2, the future reference part is less important in 2025 with the internet. However, I like to have a curated set of notes that I can play around with and set up how I like (future blog post???).","So... active engagement is what's important... that's what helps us learn. This explains what we mean by bad note-taking. Bad note-taking is passive. Writing almost exactly what we read is sidestepping the actual learning part. Good note taking is active, meaning that we must actively think about what we just read, process it, and then write down our new thought.","## What is going on in your brain when you learn?","I'm sure there's a psychological or neuro-scientitfic answer to this question. However, for our purposes we need only understand the basics. I couldn't find a diagram or any information on this idea so I made a 'note-taking flowchart'. ","Based on the various articles I've read, this is perfect note-taking. Reading and writing down are the inputs and outputs but we have a second and much more important output, 'form memory'. The memory comes as a result of 'understand', 'form idea' and 'translate to text'.",image:https://i.imgur.com/MgWTU9G.jpeg,"I'll go into a bit more detail about what these 3 steps are.","'Understand' means to interpret the words. In understanding the sentence 'The dog ran up the stairs.'', 'dog' is understood and becomes an idea of a dog. Ran is the idea of motion. and 'up the stairs' adds a destination.","'Form into idea' means to take the parts you've understood and combine them. This will have happened automatically with the previous 'dog' example but for harder subjects, you'll have to use more imagination.","'Translate into text' is the part where you take that idea from the abstract, beautifully vague 'mind's eye' and translate it into a set of words that will reform that idea. It's a good check as to whether the idea is fully formed or missing detail. How often do you start to write something down only to have to look back at what you just read to double check.","## Debugging the whole process of note-taking","So... what can go wrong with this? Where ","Understand can go wrong if you don't know what the words mean, or what the sub-ideas mean. If you are learning about web servers and you don't know how the internet works, you'll not immediately understand the words 'connection' or 'request'. This is also why people who know one programming language can easily learn another. They understand what a 'conditional statement' means already. If we don't understand the sub-ideas we need to learn those first and come back. Good courses will 'build-up' ideas this way. To debug understanding we should check we know the background material.","Form into Idea usually happens automatically if you fully understand the sentence. However, it requires complete concentration. If we are half-awake and trying to learn about quantum physics, it's not going to go well. That's because forming solid ideas in quantum physics is extremely hard (I did Master's in Physics). To debug idea formation we should try check we aren't tired, distracted or in other ways inhibited. We can also find a different explanation if the presented one isn't working.","Translate into text is also usually automatic if you have a fully formed idea. This step requires a lot of practice though. This is actually a sneaky 'information retrieval' step within the learning process. It serves as both a test of the idea and as a further formation of the memory (as text). To debug text formation we can compare our own words with the material. If too similar, it's likely that we are struggling to translate our idea.","We can also debug the whole process by reading our notes and seeing if it matches with our idea, if they return the correct answers to questions.","## Information Retrieval","Information Retrieval can be thought of as the opposite of learning. The point of learning is that later we can retrieve it. Hence, it only makes sense to think about output when looking at input.","With information retrieval we have another flow chart. It's arguably a lot more complex than this but here is the basic process.",image:https://i.imgur.com/gRzIQmq.jpeg,"We won't go too deep into this process (another future article???). The main thing to see here is the similarity to the note-taking flow. We have the same 'translate into text' step as before. In fact, it's a near identical process. ","Also, we have to 'link ideas together' which is the formation of an idea. The difference with note-taking is that the idea in note-taking is 'the idea' from the material whereas here it's an idea we created ourselves. ","To access to the memory information from the question, we need to have mentally linked the idea in the question to the memories we have in our brain. This means we not only need to have learned the information but have linked it with related ideas. I'll discuss this is part 2.","## Conclusion to Part 1","So learning can be thought of as turning other people's ideas (presented in material) into our ideas and then into memory. The process active reading is thinking other people's thoughts. Our memories are able to be extended to the memories of those we read of and talk to. From this, we are able to form vastly more powerful ideas.","There will be a part 2 to this blog article discussing linking ideas, how I might adapt my note-taking process and the merits of some other learning methods. I'll also try to extend my model to linking ideas which might be considered the difference between knowledge and intelligence."}
phone-server	I'm Running this Website on a Phone	2025-08-14	https://i.imgur.com/XqaWwSW.jpeg	Termux running on a Moto E14	{"## Intro ","Ever since I was a child I've enjoyed using things not for their intended purpose. I'd love to watch someone use a brushless drill motor in an electric bike. That's part of the fun of hacking... taking things well beyond what the manufacturer ever imagined. ","Well... I've come want to host this blog and although I don't have a home server right now I still wanted to self host. That's why I'm using a phone!","## Why run a server from an old phone","Paywalls - Look at medium.com. You might think of it as a free space to upload your blog. Oh wait... your blog is now behind a paywall. This is a trend that's not likely to change.","Customisation - If you use a site maker, you are usually locked down to a specific template. If you know how to code front-end, this is doubly frustrating.","Learning Experience- I've personally learned a lot about back-end engineering from doing this. It's really quite easy. ","That said, you'll need to put aside an afternoon to get it set up. ","## Run a Node Server on Android","This is not a tutorial. Tutorials exist already. The basic idea is that you can run Termux, an android terminal emulator which runs on top of your Android OS. It's able to run code directly on your device's kernel but does not have root access.","It runs very slow but my device is a Moto E14 which was £50 from amazon. ","## Better Options (if you have more money)","A common situation is to hire a VM on a server. Or hire and entire server. This is a good option for some but has a monthly subscription attached and usually restrictions on what you're allowed to run.","If you have the money, a raspberry pi is a great cheapish option. It's massively more powerful than a phone, can be expanded with storage, networking etc. However, with a case and charger you're talking in the region of £100. This makes a lot more sense if you plan on self hosting more than just a blog.","## Planned upgrades","The Termux instance is very slow. A better option is to flash an instance of ubuntu server onto the phone. I thought of this but as my only USB-C cable is not a data cable, I can't do it right now.","After I get the R-Pi, I'll set up a few extras. Currently the blog uses a JSON file which I edit manually but I'll set up a MongoDB instance soon. I'd like to self host this as a microservice. ","Also, I would like to add a CI/CD pipeline. Again, this would need a much more powerful server which can handle builds, tests and deployment. This is completely unnecessary for a blog but would be useful practice.","## Conclusion","This is not a forever solution. It's fairly obvious that I'll need to upgrade. That said, having _a_ solution is more important that _the_ solution right now."}
software-updates	Software Updates: Dos and Don'ts	2025-08-12	https://i.imgur.com/5beeh2U.png	An illustration of the Crowdstrike Outage in an airport baggage gate.	{"## Intro","Popular software usually receives frequent updates. In fact, modern software _needs_ to be updated to function. The web browser you are viewing this on needs to be updated. The Operating System on your Phone or Laptop needs to be updated. Standards change, requirements change, bugs emerge and products get new features to fulfil user demands.","Although modern updates are usually extremely well done, understanding how to roll out software updates is a key part of the software lifecycle.","## Fix and Feature Updates","We can split updates into two groups; fixes and features. ","Fixes - things the user shouldn't see (security updates, bug fixes etc). ","Features - things the user should see (new buttons, updated UI etc).","A fix is simple because nobody sees it. The user simply won't see the error any more.","The hard type of update is a feature update. This is because you can annoy users with changes to software they are familiar with. As such, we need to be sensitive to the user. The user trusts you to not break their product. They have a mental map of how everything works so we need to keep it the same. Any time we are changing the app, we need to be tasteful, keep the user informed and be persuasive.","## Strategies for roll out","The easiest type of roll out is to push the update to everyone at once - referred to as 'big-bang'. There are some issues with big-bang such as if there is a major bug that was missed in testing or extremely negative user feedback regarding a feature.","The safer approach is to deploy to a subset of your users. Get feedback and later have a wide release. You can see if you've missed anything with minimal reputational damage. However, this is more expensive to set up and delays updates.","Rule of thumb: big product - phased, small product - all at once.","## The worst update of all time","What would happen if Y2K did happen? What if a huge amount of computers crashed all at once? Well... that did happen. Last year. The 'Crowdstrike Outage'  (19th of July, 2024) was arguably the worst software update of all time and completely avoidable. ","In short, the outage was caused by a security update to Crowdstrike's Falcon product with a logical error. As Falcon has special privilege to low level OS commands, Falcon caused Windows to crash... on over 8.5 million machines.","The fix was issued within hours but by then, the damage was done.","How would you avoid this? Well... don't use a Big-Bang rollout when you have your software running on 8.5 million devices. This was a leadership problem, they did not plan for mistakes to happen.","## Conclusion","Updating Software is _usually_ fairly simple these days. Most software can be frequently updated and feedback is readily available. Big companies value reputation over velocity and have entire teams dedicated to effectively rolling out updates their software."}
starting-a-blog	Yes... I'm starting a Daily Blog in 2025	2025-08-10	https://i.imgur.com/XhUV8T6.png	Statue of Socrates in thought	{#Intro,"'The unexamined life is not worth living' - Socrates. Here, I'll try to examine just about everything I know about what I do best, Software Engineering. I'm currently a middling software engineer trying to become the best. I'm a fast learner though, so that's a good start.","'... but when you examine your life... oh that's not fun' - Norm MacDonald. Routinely calling into question your most basic assumptions can be painful. I believe that,  to get good at anything, you should need to go though all the necessary torture. In this case, I'll be learning everything there is to know about software.","#Who the Blog Is For","In all honesty, the blog is mostly for my own benefit. I don't much read blogs. I don't expect to get much or any interest in this blog. This blog exists simply as a creative outlet.","However, if you (not me) are reading this, then you are surely interested in software. So... maybe heed some second hand knowledge. It's not the real thing but a whiff of it. Useful for getting a taste.","#The Topics I'll Be Covering","This blog aims to examine what I know, what I'm learning, deep into my thoughts. As what I'm learning is usually technology based, that's what the blog will usually be.","I have a few thoughts as to the initial direction of the blog. I'm trying for a Front-End Developer job so my current learning is aimed at front-end development. The modern state of UI is a good option. By the same token, to understand a problem is the first step to solve it so I'll examine the job market and how to best get a job in 2025. I have some expertise in code optimisation so I'll write a piece on when we should and shouldn't optimise code. Lastly, I think improving performance is an important thing to think about. I'll write on exercise, sleep and diets a little bit. ","#My Target Blog style","From blogs I've read (not many) I really like one written by Tim Ferriss. He is a man who want's to make the most of his life and inspire others to do the same. His style is both deeply personal and professionally polished. It reads like a celebrity newspaper column where it's from a particular perspective but not 'talky' or poorly edited.","#What Success Looks Like","Success in this blog will be if I can make it to 100 days. 100 days,100 articles, 50,000 edited. The reason for 'daily' as opposed to bi-weekly (my first thought) is that I need a lot of examination in my life.",#Conclusion,"What does Socrates mean when he says we need to examine our lives? Well... I think he means that we should maximise our lives. Not just live for the sake of living but really put effort into our days. Make the most of what we have. I think this blog is the first step towards that goal!"}
\.


--
-- Name: blog_entries blog_entries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_entries
    ADD CONSTRAINT blog_entries_pkey PRIMARY KEY (id);


--
-- PostgreSQL database dump complete
--

\unrestrict UJjOhoTgwgcpbQo2bc4eU1bL89q9M3wZV9KpBmhtAWUfmy7U4hOWlhwwSixzymB

