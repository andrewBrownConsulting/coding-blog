{"version":3,"sources":["turbopack:///[project]/src/app/images/page.jsx"],"sourcesContent":["'use client'\nimport { useState, useEffect } from 'react';\nexport default function Home() {\n  const [name, setName] = useState('')\n  const [imageFile, setImageFile] = useState();\n  const [imagePreview, setImagePreview] = useState();\n  const [allImages, setAllImages] = useState([]);\n  useEffect(() => {\n    fetch('https://images.andrewb.site/all-images?api_key=' + process.env.NEXT_PUBLIC_IMAGES_API_KEY)\n      .then(response => response.json())\n      .then(imageData => { setAllImages(imageData.images); console.log(imageData.images) });\n  }, [])\n  const uploadImage = () => {\n    if (!imageFile)\n      alert(\"Upload an image first\")\n\n    const formData = new FormData();\n    formData.append(\"image\", imageFile);\n\n    fetch('https://images.andrewb.site/upload?filename=' + name + '&api_key=' + process.env.NEXT_PUBLIC_IMAGES_API_KEY, {\n      method: 'POST',\n      body: formData\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        alert('Success, image uploaded')\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n        alert('Image failed to upload :(')\n      });\n  }\n  return (\n    <div>\n\n      <input type=\"text\" placeholder='Image Name' onChange={(e) => setName(e.target.value)} />\n      <br />\n      <input type=\"file\" accept=\"image/*\" onChange={(e) => {\n        const file = e.target.files[0];\n        setImageFile(file);\n        if (file)\n          setImagePreview(URL.createObjectURL(file));\n      }} />\n      <div className=\"container row row-cols-3\">\n        <div className='col card'>\n          {name && <h1>{name}</h1>}\n          {imagePreview &&\n            getImageById(imgPreview)\n          }\n          <button onClick={uploadImage}>Upload</button>\n        </div>\n      </div>\n      {allImages}\n      <div className=\"container row row-cols-1 row-cols-sm-2 row-cols-lg-3\">\n        {allImages && allImages.map(((imageFile) => {\n          return (<div className='card' key={imageFile}>\n            <h3 className='card-title'>{imageFile}</h3>\n            getImageFromId(imageFile);\n          </div>)\n        }))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"+EACA,EAAA,EAAA,CAAA,CAAA,OACe,SAAS,IACtB,GAAM,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IAC3B,CAAC,EAAW,EAAa,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,IAC5B,CAAC,EAAc,EAAgB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,IAC1C,CAAC,EAAW,EAAa,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,EAAE,QAC7C,CAAA,EAAA,EAAA,SAAS,AAAT,EAAU,KACR,MAAM,kDAAoD,QAAQ,GAAG,CAAC,0BAA0B,EAC7F,IAAI,CAAC,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,IAAe,EAAa,EAAU,MAAM,EAAG,QAAQ,GAAG,CAAC,EAAU,MAAM,CAAE,EACvF,EAAG,EAAE,EAuBH,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WAEC,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,KAAK,OAAO,YAAY,aAAa,SAAW,AAAD,GAAO,EAAQ,EAAE,MAAM,CAAC,KAAK,IACnF,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAA,GACD,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,KAAK,OAAO,OAAO,UAAU,SAAU,AAAC,IAC7C,IAAM,EAAO,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAC9B,EAAa,GACT,GACF,EAAgB,IAAI,eAAe,CAAC,GACxC,IACA,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,oCACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,qBACZ,GAAQ,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,UAAI,IACb,GACC,aAAa,YAEf,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CAAO,QAtCI,CAsCK,IArCnB,AAAC,GACH,MAAM,yBAER,IAAM,EAAW,IAAI,SACrB,EAAS,MAAM,CAAC,QAAS,GAEzB,MAAM,+CAAiD,EAAO,YAAc,QAAQ,GAAG,CAAC,0BAA0B,CAAE,CAClH,OAAQ,OACR,KAAM,CACR,GACG,IAAI,CAAC,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,IACJ,QAAQ,GAAG,CAAC,WAAY,GACxB,MAAM,0BACR,GACC,KAAK,CAAC,AAAC,IACN,QAAQ,KAAK,CAAC,SAAU,GACxB,MAAM,4BACR,EACJ,WAkBsC,gBAGjC,EACD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gEACZ,GAAa,EAAU,GAAG,CAAE,AAAC,GACpB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,iBACrB,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,sBAAc,IAAe,+BADV,QAQ7C"}