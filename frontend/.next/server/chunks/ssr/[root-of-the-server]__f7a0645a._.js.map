{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/db.js"],"sourcesContent":["import { Pool } from 'pg';\n\nconst pool = new Pool({\n  user: process.env.POSTGRES_USER,\n  password: process.env.POSTGRES_PASSWORD,\n  host: process.env.POSTGRES_HOST, //CHANGE ME\n  database: process.env.POSTGRES_DB\n});\nconst blog_query = (text, params) => pool.query(text, params)\n\nexport async function getAllBlogIds() {\n  makeDataTable();\n  const database = await blog_query('select id from blog_entries');\n  return database.rows;\n}\nexport async function getAllBlogEntries() {\n  const database = await blog_query('select * from blog_entries order by date_created DESC');\n  return database.rows;\n}\nexport async function getLatestBlogEntry() {\n  const database = await blog_query('select * from blog_entries order by date_created DESC LIMIT 1');\n  return database.rows[0];\n}\nexport async function getBlogEntryWithId(id) {\n  const database = await blog_query('select * from blog_entries WHERE id = $1', [id]);\n  return database.rows[0];\n}\nexport async function addBlogEntry(id, title, img_caption, article) {\n  let date_created = new Date();\n  const database = await blog_query('INSERT INTO blog_entries (id, title, date_created, image_url, image_caption, article) VALUES ($1, $2, $3, $4, $5, $6)', [id, title, date_created, \"N/A\", img_caption, article]);\n  console.log(database)\n  return database.rows[0];\n}\nexport async function updateBlogEntry(id, title, img_caption, article) {\n  const database = await blog_query('UPDATE blog_entries set title = $1, image_caption=$2, article=$3 where id=$4', [title, img_caption, article, id]);\n  console.log(database)\n}\nexport async function makeDataTable() {\n  let tableQuery = 'create table if not exists blog_entries (\\n'\n    + 'id text,\\n'\n    + 'title text,\\n'\n    + 'date_created date,\\n'\n    + 'image_url text,\\n'\n    + 'image_caption text,\\n'\n    + 'article text[]\\n'\n    + ')';\n  blog_query(tableQuery);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,MAAM,OAAO,IAAI,4GAAI,CAAC;IACpB,MAAM,QAAQ,GAAG,CAAC,aAAa;IAC/B,UAAU,QAAQ,GAAG,CAAC,iBAAiB;IACvC,MAAM,QAAQ,GAAG,CAAC,aAAa;IAC/B,UAAU,QAAQ,GAAG,CAAC,WAAW;AACnC;AACA,MAAM,aAAa,CAAC,MAAM,SAAW,KAAK,KAAK,CAAC,MAAM;AAE/C,eAAe;IACpB;IACA,MAAM,WAAW,MAAM,WAAW;IAClC,OAAO,SAAS,IAAI;AACtB;AACO,eAAe;IACpB,MAAM,WAAW,MAAM,WAAW;IAClC,OAAO,SAAS,IAAI;AACtB;AACO,eAAe;IACpB,MAAM,WAAW,MAAM,WAAW;IAClC,OAAO,SAAS,IAAI,CAAC,EAAE;AACzB;AACO,eAAe,mBAAmB,EAAE;IACzC,MAAM,WAAW,MAAM,WAAW,4CAA4C;QAAC;KAAG;IAClF,OAAO,SAAS,IAAI,CAAC,EAAE;AACzB;AACO,eAAe,aAAa,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO;IAChE,IAAI,eAAe,IAAI;IACvB,MAAM,WAAW,MAAM,WAAW,yHAAyH;QAAC;QAAI;QAAO;QAAc;QAAO;QAAa;KAAQ;IACjN,QAAQ,GAAG,CAAC;IACZ,OAAO,SAAS,IAAI,CAAC,EAAE;AACzB;AACO,eAAe,gBAAgB,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO;IACnE,MAAM,WAAW,MAAM,WAAW,gFAAgF;QAAC;QAAO;QAAa;QAAS;KAAG;IACnJ,QAAQ,GAAG,CAAC;AACd;AACO,eAAe;IACpB,IAAI,aAAa,gDACb,eACA,kBACA,yBACA,sBACA,0BACA,qBACA;IACJ,WAAW;AACb","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/editor/addPost.js"],"sourcesContent":["'use server'\nimport { addBlogEntry, getAllBlogIds, getBlogEntryWithId, updateBlogEntry } from '../db.js'\nimport { formatArticle } from '../utils.js';\nexport async function addPost(newArt, title, id, imgCaption, article) {\n  const formattedArticle = formatArticle(article)\n  if (newArt)\n    addBlogEntry(id, title, imgCaption, formattedArticle);\n  else\n    updateBlogEntry(id, title, imgCaption, formattedArticle)\n}\nexport async function getIds() {\n  return getAllBlogIds();\n}\nexport async function serverGetBlogEntryWithId(id) {\n  return getBlogEntryWithId(id);\n}\n"],"names":[],"mappings":";;;;;;;;;;AACA;AACA;;;;;;;;;;AACO,eAAe,QAAQ,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO;IAClE,MAAM,mBAAmB,IAAA,oIAAa,EAAC;IACvC,IAAI,QACF,IAAA,gIAAY,EAAC,IAAI,OAAO,YAAY;SAEpC,IAAA,mIAAe,EAAC,IAAI,OAAO,YAAY;AAC3C;AACO,eAAe;IACpB,OAAO,IAAA,iIAAa;AACtB;AACO,eAAe,yBAAyB,EAAE;IAC/C,OAAO,IAAA,sIAAkB,EAAC;AAC5B;;;IAZsB;IAOA;IAGA;;AAVA,+OAAA;AAOA,+OAAA;AAGA,+OAAA","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///app/.next-internal/server/app/editor/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {addPost as '7c68d0ae755202d7ac1a70158c8e0992f6fcd8bd4e'} from 'ACTIONS_MODULE0'\nexport {getIds as '00e642685f8fa6528f2d10f07fd0bfc878bc59a2b0'} from 'ACTIONS_MODULE0'\nexport {serverGetBlogEntryWithId as '40c8afec56a19bb1487ba64b5d69867550e8375046'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/editor/page.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/editor/page.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/editor/page.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/editor/page.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/editor/page.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/editor/page.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAuQ,GACpS,qCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}