{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/blog/parseArticle.js"],"sourcesContent":["import { getImageFromFilename, getImageFromId } from \"../utils.js\"\nexport function parseArticle(article) {\n\n  let parsedArticle = article?.map((sect, index) => {\n    if (sect.charAt(0) === '#')\n      return <h2 className='article-header' key={index}>{sect.replace(/#/g, \"\")}</h2>\n    if (sect.startsWith('image:')) {\n      const source = sect.split(\"image:\")[1];\n      return getImageFromFilename(source);\n    }\n    else {\n      //look for _text_ blocks\n      let replaced = sect.split(/(_.*?_)/g).map((substr, subindex) => (\n        /_(.*?)_/.test(substr) ?\n          <em key={subindex}>{substr.slice(1, -1)}</em> :\n          <span key={subindex}>{substr}</span>\n      ))\n      return <p className=\"article-text\" key={index}>{replaced}</p>\n    }\n  })\n  return parsedArticle;\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AACO,SAAS,aAAa,OAAO;IAElC,IAAI,gBAAgB,SAAS,IAAI,CAAC,MAAM;QACtC,IAAI,KAAK,MAAM,CAAC,OAAO,KACrB,qBAAO,8OAAC;YAAG,WAAU;sBAA8B,KAAK,OAAO,CAAC,MAAM;WAA3B;;;;;QAC7C,IAAI,KAAK,UAAU,CAAC,WAAW;YAC7B,MAAM,SAAS,KAAK,KAAK,CAAC,SAAS,CAAC,EAAE;YACtC,OAAO,IAAA,2IAAoB,EAAC;QAC9B,OACK;YACH,wBAAwB;YACxB,IAAI,WAAW,KAAK,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,WACjD,UAAU,IAAI,CAAC,wBACb,8OAAC;8BAAmB,OAAO,KAAK,CAAC,GAAG,CAAC;mBAA5B;;;;yCACT,8OAAC;8BAAqB;mBAAX;;;;;YAEf,qBAAO,8OAAC;gBAAE,WAAU;0BAA4B;eAAR;;;;;QAC1C;IACF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/db.js"],"sourcesContent":["import { Pool } from 'pg';\n\nconst pool = new Pool({\n  user: process.env.POSTGRES_USER,\n  password: process.env.POSTGRES_PASSWORD,\n  host: process.env.POSTGRES_HOST, //CHANGE ME\n  database: process.env.POSTGRES_DB\n});\nconst blog_query = (text, params) => pool.query(text, params)\n\nexport async function getAllBlogIds() {\n  const database = await blog_query('select id from blog_entries');\n  return database.rows;\n}\nexport async function getAllBlogEntries() {\n  const database = await blog_query('select * from blog_entries order by date_created DESC');\n  return database.rows;\n}\nexport async function getLatestBlogEntry() {\n  const database = await blog_query('select * from blog_entries order by date_created DESC LIMIT 1');\n  return database.rows[0];\n}\nexport async function getBlogEntryWithId(id) {\n  const database = await blog_query('select * from blog_entries WHERE id = $1', [id]);\n  return database.rows[0];\n}\nexport async function addBlogEntry(id, title, img_caption, article) {\n  let date_created = new Date();\n  const database = await blog_query('INSERT INTO blog_entries (id, title, date_created, image_url, image_caption, article) VALUES ($1, $2, $3, $4, $5, $6)', [id, title, date_created, \"N/A\", img_caption, article]);\n  console.log(database)\n  return database.rows[0];\n}\nexport async function updateBlogEntry(id, title, img_caption, article) {\n  const database = await blog_query('UPDATE blog_entries set title = $1, image_caption=$2, article=$3 where id=$4', [title, img_caption, article, id]);\n  console.log(database)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AAEA,MAAM,OAAO,IAAI,4GAAI,CAAC;IACpB,MAAM,QAAQ,GAAG,CAAC,aAAa;IAC/B,UAAU,QAAQ,GAAG,CAAC,iBAAiB;IACvC,MAAM,QAAQ,GAAG,CAAC,aAAa;IAC/B,UAAU,QAAQ,GAAG,CAAC,WAAW;AACnC;AACA,MAAM,aAAa,CAAC,MAAM,SAAW,KAAK,KAAK,CAAC,MAAM;AAE/C,eAAe;IACpB,MAAM,WAAW,MAAM,WAAW;IAClC,OAAO,SAAS,IAAI;AACtB;AACO,eAAe;IACpB,MAAM,WAAW,MAAM,WAAW;IAClC,OAAO,SAAS,IAAI;AACtB;AACO,eAAe;IACpB,MAAM,WAAW,MAAM,WAAW;IAClC,OAAO,SAAS,IAAI,CAAC,EAAE;AACzB;AACO,eAAe,mBAAmB,EAAE;IACzC,MAAM,WAAW,MAAM,WAAW,4CAA4C;QAAC;KAAG;IAClF,OAAO,SAAS,IAAI,CAAC,EAAE;AACzB;AACO,eAAe,aAAa,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO;IAChE,IAAI,eAAe,IAAI;IACvB,MAAM,WAAW,MAAM,WAAW,yHAAyH;QAAC;QAAI;QAAO;QAAc;QAAO;QAAa;KAAQ;IACjN,QAAQ,GAAG,CAAC;IACZ,OAAO,SAAS,IAAI,CAAC,EAAE;AACzB;AACO,eAAe,gBAAgB,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO;IACnE,MAAM,WAAW,MAAM,WAAW,gFAAgF;QAAC;QAAO;QAAa;QAAS;KAAG;IACnJ,QAAQ,GAAG,CAAC;AACd","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/blog/%5Bid%5D/page.jsx"],"sourcesContent":["import { parseArticle } from \"../parseArticle.js\";\nimport { parseDate, getImageFromId } from \"../../utils.js\";\nimport { getBlogEntryWithId } from '../../db.js'\nexport const dynamic = \"force-dynamic\";\n\nexport let metadata = {\n  title: \"Andrew Brown Blog\", // static\n};\nexport default async function BlogPage({ params }) {\n  const { id } = await params;\n  const blogData = await getBlogEntryWithId(id);\n  function wordCount(articleArray) {\n    let counter = 0;\n    articleArray.forEach(element => {\n      counter += element.split(' ').length;\n    });\n    return counter;\n  }\n\n  if (blogData) {\n    const { id, title, article, date_created, image_caption } = blogData;\n    const words = wordCount(article);\n    metadata.title = title;\n    return (\n      <div className=\"container\">\n        <div className='row'>\n          <div className='col-12 col-md-6'>\n            <h3 className=' fs-1'>{title}</h3>\n            <p className='card-title'>{parseDate(date_created)}</p>\n            <p>Author - Andrew Brown</p>\n            <p>Length: {words} words ({Math.round(words / 200)} mins)</p>\n          </div>\n          <figure className='col-12 col-md-6'>\n            {getImageFromId(id)}\n            <figcaption className='d-block fst-italic '>{image_caption}</figcaption>\n          </figure>\n        </div>\n        <article>\n          <div className='row'>\n            <br />\n            {parseArticle(article)}\n          </div>\n        </article >\n      </div>\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;;;;;;;;;AACO,MAAM,UAAU;AAEhB,IAAI,WAAW;IACpB,OAAO;AACT;AACe,eAAe,SAAS,EAAE,MAAM,EAAE;IAC/C,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,WAAW,MAAM,IAAA,sIAAkB,EAAC;IAC1C,SAAS,UAAU,YAAY;QAC7B,IAAI,UAAU;QACd,aAAa,OAAO,CAAC,CAAA;YACnB,WAAW,QAAQ,KAAK,CAAC,KAAK,MAAM;QACtC;QACA,OAAO;IACT;IAEA,IAAI,UAAU;QACZ,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG;QAC5D,MAAM,QAAQ,UAAU;QACxB,SAAS,KAAK,GAAG;QACjB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAS;;;;;;8CACvB,8OAAC;oCAAE,WAAU;8CAAc,IAAA,gIAAS,EAAC;;;;;;8CACrC,8OAAC;8CAAE;;;;;;8CACH,8OAAC;;wCAAE;wCAAS;wCAAM;wCAAS,KAAK,KAAK,CAAC,QAAQ;wCAAK;;;;;;;;;;;;;sCAErD,8OAAC;4BAAO,WAAU;;gCACf,IAAA,qIAAc,EAAC;8CAChB,8OAAC;oCAAW,WAAU;8CAAuB;;;;;;;;;;;;;;;;;;8BAGjD,8OAAC;8BACC,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;;;;4BACA,IAAA,kJAAY,EAAC;;;;;;;;;;;;;;;;;;IAKxB;AACF","debugId":null}}]
}