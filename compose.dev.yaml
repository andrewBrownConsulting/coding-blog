services:
  frontend:
    build: ./frontend/
    command: npm start
    expose:
      - 3000

    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: development
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      NEXT_PUBLIC_IMAGES_BASE_URL: https://blog-images-s3-andrewb.s3.us-east-1.amazonaws.com/
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/blog_data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./sshkeys/:/etc/ssl/certs/
    depends_on:
      - frontend
volumes:
  pgdata:
